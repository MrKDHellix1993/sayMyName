buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE")
        classpath("cz.habarta.typescript-generator:typescript-generator-gradle-plugin:2.1.410")
    }
}

plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'war'
}

apply plugin: 'cz.habarta.typescript-generator'


group = 'io.javaworkshop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile group: 'org.apache.commons', name: 'commons-csv', version: '1.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//runtimeOnly 'com.h2database:h2'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

generateTypeScript {
	jsonLibrary = 'jackson2'
    classPatterns = [
        'io.javaworkshop.coronavirustracker.models.*'
    ]
    outputFile = '/../corona-virus-tracker-app/src/app/interfaces/tsJavaModule.d.ts'
    outputKind = 'global'
    namespace = 'Cvt';   
}
